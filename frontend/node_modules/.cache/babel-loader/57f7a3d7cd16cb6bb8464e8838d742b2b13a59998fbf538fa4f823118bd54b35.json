{"ast":null,"code":"var _jsxFileName = \"/Users/francescomarinelli/Desktop/Personal/React/assignment/frontend/src/App.js\";\nimport './App.css';\nimport Post from './Post.js';\nimport CreatePost from './CreatePost.js';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: []\n    };\n    this.removePostFromState = this.removePostFromState.bind(this);\n  }\n\n  // the list of posts will be filled after the component is mounted\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(resp => resp.json()).then(resp => {\n      this.setState({\n        posts: resp\n      });\n    });\n    console.log(\"Fetch concluded\");\n  }\n  removePostFromState(id) {\n    fetch('https://jsonplaceholder.typicode.com/posts/' + id, {\n      method: 'DELETE'\n    });\n    let updatingArray = this.state.posts.slice();\n    let index = updatingArray.findIndex(item => item.id === id);\n    updatingArray.splice(index, 1);\n    this.setState({\n      posts: updatingArray\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Beautiful Collection of Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Add a new post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(CreatePost, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Modify an existing post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"create-post-form\",\n          className: \"create-post\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"userId\",\n            name: \"userId\",\n            placeholder: \"ID of the be updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 90\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"userId\",\n            name: \"userId\",\n            placeholder: \"UserId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 76\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            placeholder: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"body\",\n            name: \"body\",\n            placeholder: \"Body of the post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List of posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), this.state.posts.map(item => /*#__PURE__*/_jsxDEV(Post, {\n        post: item,\n        delete: this.removePostFromState\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Post","CreatePost","React","App","Component","constructor","state","posts","removePostFromState","bind","componentDidMount","fetch","then","resp","json","setState","console","log","id","method","updatingArray","slice","index","findIndex","item","splice","render","handleSubmit","map"],"sources":["/Users/francescomarinelli/Desktop/Personal/React/assignment/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport Post from './Post.js';\nimport CreatePost from './CreatePost.js';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      posts: []\n    };\n\n    this.removePostFromState = this.removePostFromState.bind(this);\n  }\n\n  // the list of posts will be filled after the component is mounted\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then(resp => resp.json())\n      .then(resp => {\n        this.setState({posts: resp})\n      });\n      console.log(\"Fetch concluded\");\n}\n\n  removePostFromState(id) {\n    fetch('https://jsonplaceholder.typicode.com/posts/'+id, {\n      method: 'DELETE',\n    });\n\n    let updatingArray = this.state.posts.slice();\n    let index = updatingArray.findIndex(item => item.id === id);\n    updatingArray.splice(index, 1);\n    this.setState({posts: updatingArray});\n  }\n\n  render() {\n    return (\n      <div className=\"body\">\n      <h1>Welcome to the Beautiful Collection of Posts</h1>\n\n      <details>\n      <summary>Add a new post</summary>\n        <CreatePost/>\n      </details>\n      <details>\n        <summary>Modify an existing post</summary>\n        <form id=\"create-post-form\" className=\"create-post\" onSubmit={this.handleSubmit}>\n        <input type=\"text\" id=\"userId\" name=\"userId\" placeholder='ID of the be updated'/><br/>\n        <input type=\"text\" id=\"userId\" name=\"userId\" placeholder='UserId'/><br/>\n        <input type=\"text\" id=\"title\" name=\"title\" placeholder='Title'/><br/>\n        <textarea id=\"body\" name=\"body\" placeholder=\"Body of the post\"/><br/>\n        <input type=\"submit\" value=\"Edit\"/>\n        </form>\n      </details>\n      <h2>List of posts</h2>\n      {this.state.posts.map((item) => (\n        <Post key={item.id} post={item} delete={this.removePostFromState}/>\n      ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}