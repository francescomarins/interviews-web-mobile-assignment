{"ast":null,"code":"var _jsxFileName = \"/Users/francescomarinelli/Desktop/University/Thesis/interviews-web-mobile-assignment/frontend/src/App.js\";\nimport './App.css';\nimport Post from './Post.js';\nimport CreatePost from './CreatePost.js';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bundle_size = 15;\nconst url = \"http://localhost:5000/posts\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: [],\n      loaded: 0\n    };\n    this.removePostFromState = this.removePostFromState.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n  }\n  fetchData() {\n    let url_get = url + '?id_gte=' + Number(this.state.loaded + 1) + '&id_lte=' + Number(this.state.loaded + bundle_size);\n    fetch(url_get).then(resp => resp.json()).then(resp => {\n      if (resp.length < bundle_size) document.getElementById('load-more').style.display = 'none';\n      if (resp.length && this.state.posts.indexOf(resp[0].id) === -1) {\n        console.log(resp);\n        let updatingArray = this.state.posts.concat(resp);\n        this.setState({\n          posts: updatingArray,\n          loaded: this.state.loaded + resp.length\n        });\n      }\n    }).catch(function (err) {\n      console.log('Data retrival error -> ' + err);\n    });\n  }\n  removePostFromState(id) {\n    fetch(url + '/' + id, {\n      method: 'DELETE'\n    }).catch(function (err) {\n      console.log('Removal error -> ' + err);\n      return;\n    });\n    let updatingArray = this.state.posts.slice();\n    let index = updatingArray.findIndex(item => item.id === id);\n    updatingArray.splice(index, 1);\n    this.setState({\n      posts: updatingArray,\n      loaded: updatingArray.length\n    });\n  }\n  handleUpdate(event) {\n    event.preventDefault();\n    let id = event.target.id.value.trim();\n\n    // Parameters' checks\n    if (!id || !event.target.title.value.trim().length && !event.target.body.value.trim().length && !event.target.userId.value.trim().length) {\n      alert(\"Fill all the fields properly\");\n      return;\n    }\n    if (isNaN(id)) {\n      alert(\"The id must be a number\");\n      return;\n    }\n    let index = this.state.posts.findIndex(item => item.id === Number(id));\n    if (index === -1) {\n      alert(\"The post you want to update is not present\");\n      return;\n    }\n\n    // Setting up variables for the request to the server\n    let item = this.state.posts[index];\n    let userId = !event.target.userId.value.trim().length ? item.userId : event.target.userId.value;\n    let title = !event.target.title.value.trim().length ? item.title : event.target.title.value;\n    let body = !event.target.body.value.trim().length ? item.body : event.target.body.value;\n\n    //Last check, done here to avoid doing it on an empty field which was not intended to be modified by the user\n    if (isNaN(userId)) {\n      alert(\"The userId must be a number\");\n      return;\n    }\n\n    //Request to server\n    fetch(url + '/' + id, {\n      method: 'PUT',\n      body: JSON.stringify({\n        id: id,\n        title: title,\n        body: body,\n        userId: userId\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).catch(function (err) {\n      console.log('Fetch error -> ' + err);\n      return;\n    });\n    document.getElementById(\"update-post-form\").reset();\n\n    //Updating the state with the edited list of posts\n    let newItem = {};\n    newItem.id = id;\n    newItem.title = title;\n    newItem.body = body;\n    newItem.userId = userId;\n    let updatingArray = this.state.posts.slice();\n    updatingArray.splice(index, 1, newItem);\n    this.setState({\n      posts: updatingArray\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      onScroll: this.fetchData,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Beautiful Collection of Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          className: \"create-summary\",\n          children: \"Add a new post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CreatePost, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          className: \"update-summary\",\n          children: \"Modify an existing post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"update-post-form\",\n          className: \"post-form\",\n          onSubmit: this.handleUpdate,\n          children: [\"Insert only data to be modified, a field left empty will be kept untouched.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 84\n          }, this), \"Do not forget to insert the \\\"ID\\\" associated to the post to be updated.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 79\n          }, this), \"Be aware that it is not possible to modify a post not shown below\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 74\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"id\",\n            name: \"id\",\n            placeholder: \"ID of the post to be updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 90\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"userId\",\n            name: \"userId\",\n            placeholder: \"UserId\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 76\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            placeholder: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"body\",\n            name: \"body\",\n            placeholder: \"Body of the post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 73\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"List of posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), this.state.posts.map(item => /*#__PURE__*/_jsxDEV(Post, {\n        post: item,\n        delete: this.removePostFromState\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        id: \"load-more\",\n        value: \"Load Posts\",\n        onClick: this.fetchData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Post","CreatePost","React","bundle_size","url","App","Component","constructor","state","posts","loaded","removePostFromState","bind","handleUpdate","fetchData","url_get","Number","fetch","then","resp","json","length","document","getElementById","style","display","indexOf","id","console","log","updatingArray","concat","setState","catch","err","method","slice","index","findIndex","item","splice","event","preventDefault","target","value","trim","title","body","userId","alert","isNaN","JSON","stringify","headers","response","reset","newItem","render","map"],"sources":["/Users/francescomarinelli/Desktop/University/Thesis/interviews-web-mobile-assignment/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport Post from './Post.js';\nimport CreatePost from './CreatePost.js';\nimport React from 'react';\n\nconst bundle_size = 15;\nconst url = \"http://localhost:5000/posts\";\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      posts: [],\n      loaded: 0\n    };\n\n    this.removePostFromState = this.removePostFromState.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  fetchData() {\n    let url_get = url + '?id_gte=' + Number(this.state.loaded+1) + '&id_lte=' + Number(this.state.loaded+bundle_size);\n    fetch(url_get).then(resp => resp.json()).then(resp => {\n      if(resp.length < bundle_size)\n      document.getElementById('load-more').style.display = 'none';\n      if(resp.length && this.state.posts.indexOf(resp[0].id)===-1) {\n        console.log(resp);\n        let updatingArray = this.state.posts.concat(resp);\n        this.setState({posts: updatingArray, loaded: this.state.loaded+resp.length})\n      }}).catch(function(err) {\n        console.log('Data retrival error -> ' + err);\n      });\n    }\n\n    removePostFromState(id) {\n      fetch(url+'/'+id, {\n        method: 'DELETE',\n      }).catch(function(err) {\n        console.log('Removal error -> ' + err);\n        return;\n      });\n\n      let updatingArray = this.state.posts.slice();\n      let index = updatingArray.findIndex(item => item.id === id);\n      updatingArray.splice(index, 1);\n      this.setState({posts: updatingArray, loaded: updatingArray.length});\n    }\n\n    handleUpdate(event) {\n      event.preventDefault();\n      let id = event.target.id.value.trim();\n\n      // Parameters' checks\n      if (!id || (!event.target.title.value.trim().length &&\n      !event.target.body.value.trim().length && !event.target.userId.value.trim().length)) {\n        alert(\"Fill all the fields properly\");\n        return;\n      }\n      if (isNaN(id)) {\n        alert(\"The id must be a number\");\n        return;\n      }\n\n      let index = this.state.posts.findIndex(item => item.id === Number(id));\n      if(index === -1) {\n        alert(\"The post you want to update is not present\");\n        return;\n      }\n\n      // Setting up variables for the request to the server\n      let item = this.state.posts[index];\n      let userId = (!event.target.userId.value.trim().length) ? item.userId : event.target.userId.value;\n      let title = (!event.target.title.value.trim().length) ? item.title : event.target.title.value;\n      let body = (!event.target.body.value.trim().length) ? item.body : event.target.body.value;\n\n      //Last check, done here to avoid doing it on an empty field which was not intended to be modified by the user\n      if (isNaN(userId)) {\n        alert(\"The userId must be a number\");\n        return;\n      }\n\n      //Request to server\n      fetch(url+'/'+id, {\n        method: 'PUT',\n        body: JSON.stringify({\n          id: id,\n          title: title,\n          body: body,\n          userId: userId,\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8',\n        },\n      })\n      .then((response) => response.json()).catch(function(err) {\n        console.log('Fetch error -> ' + err);\n        return;\n      });\n      document.getElementById(\"update-post-form\").reset();\n\n      //Updating the state with the edited list of posts\n      let newItem = {};\n      newItem.id = id;\n      newItem.title = title;\n      newItem.body = body;\n      newItem.userId = userId;\n      let updatingArray = this.state.posts.slice();\n      updatingArray.splice(index, 1, newItem);\n      this.setState({posts: updatingArray});\n    }\n\n    render() {\n\n      return (\n        <div className=\"body\" onScroll={this.fetchData}>\n        <h1>Welcome to the Beautiful Collection of Posts</h1>\n        <details>\n        <summary className='create-summary'>Add a new post</summary>\n        <CreatePost/>\n        </details>\n        <details>\n        <summary className='update-summary'>Modify an existing post</summary>\n        <form id=\"update-post-form\" className=\"post-form\" onSubmit={this.handleUpdate}>\n        Insert only data to be modified, a field left empty will be kept untouched.<br/>\n        Do not forget to insert the \"ID\" associated to the post to be updated.<br/>\n        Be aware that it is not possible to modify a post not shown below<br/>\n        <input type=\"text\" id=\"id\" name=\"id\" placeholder='ID of the post to be updated'/><br/>\n        <input type=\"text\" id=\"userId\" name=\"userId\" placeholder='UserId'/><br/>\n        <input type=\"text\" id=\"title\" name=\"title\" placeholder='Title'/><br/>\n        <textarea id=\"body\" name=\"body\" placeholder=\"Body of the post\"/><br/>\n        <input type=\"submit\" value=\"Update\"/>\n        </form>\n        </details>\n        <h2>List of posts</h2>\n        {this.state.posts.map((item) => (\n          <Post key={item.id} post={item} delete={this.removePostFromState}/>\n        ))}\n        <input type='button' id='load-more' value='Load Posts' onClick={this.fetchData}/>\n        </div>\n      );\n    }\n  }\n\n  export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}