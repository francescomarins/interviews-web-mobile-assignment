{"ast":null,"code":"var _jsxFileName = \"/Users/francescomarinelli/Desktop/Personal/React/assignment/frontend/src/CreatePost.js\";\nimport React from 'react';\nimport App from './App.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CreatePost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleSubmit(event) {\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      body: JSON.stringify({\n        title: 'foo',\n        body: 'bar',\n        userId: 1\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(json => console.log(json));\n    App.fetchPosts();\n    event.preventDefault();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"create-post\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"userId\",\n        name: \"userId\",\n        placeholder: \"UserId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 74\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        name: \"title\",\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 71\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"body\",\n        name: \"body\",\n        placeholder: \"Body of the post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 71\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default CreatePost;","map":{"version":3,"names":["React","App","CreatePost","Component","constructor","props","handleSubmit","bind","event","fetch","method","body","JSON","stringify","title","userId","headers","then","response","json","console","log","fetchPosts","preventDefault","render"],"sources":["/Users/francescomarinelli/Desktop/Personal/React/assignment/frontend/src/CreatePost.js"],"sourcesContent":["import React from 'react';\nimport App from './App.js';\n\nclass CreatePost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      body: JSON.stringify({\n        title: 'foo',\n        body: 'bar',\n        userId: 1,\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    })\n    .then((response) => response.json())\n    .then((json) => console.log(json));\n    App.fetchPosts();\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form className=\"create-post\" onSubmit={this.handleSubmit}>\n      <input type=\"text\" id=\"userId\" name=\"userId\" placeholder='UserId'/><br/>\n      <input type=\"text\" id=\"title\" name=\"title\" placeholder='Title'/><br/>\n      <textarea id=\"body\" name=\"body\" placeholder=\"Body of the post\"/><br/>\n      <input type=\"submit\" value=\"Publish\"/>\n      </form>\n    );\n  }\n}\n\nexport default CreatePost;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,UAAU;AAAC;AAE3B,MAAMC,UAAU,SAASF,KAAK,CAACG,SAAS,CAAC;EACvCC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EAClD;EAEAD,YAAY,CAACE,KAAK,EAAE;IAClBC,KAAK,CAAC,4CAA4C,EAAE;MAClDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAE,KAAK;QACZH,IAAI,EAAE,KAAK;QACXI,MAAM,EAAE;MACV,CAAC,CAAC;MACFC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;IAClClB,GAAG,CAACqB,UAAU,EAAE;IAChBd,KAAK,CAACe,cAAc,EAAE;EACxB;EAEAC,MAAM,GAAG;IACP,oBACE;MAAM,SAAS,EAAC,aAAa;MAAC,QAAQ,EAAE,IAAI,CAAClB,YAAa;MAAA,wBAC1D;QAAO,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,QAAQ;QAAC,IAAI,EAAC,QAAQ;QAAC,WAAW,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAE;QAAA;QAAA;QAAA;MAAA,QAAK,eACxE;QAAO,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,OAAO;QAAC,IAAI,EAAC,OAAO;QAAC,WAAW,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAE;QAAA;QAAA;QAAA;MAAA,QAAK,eACrE;QAAU,EAAE,EAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,WAAW,EAAC;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAE;QAAA;QAAA;QAAA;MAAA,QAAK,eACrE;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/B;EAEX;AACF;AAEA,eAAeJ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}